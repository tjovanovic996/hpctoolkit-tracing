"#*******************************************************************************\n"
"# a helper template makefile used by hpcstruct at runtime\n"
"#\n"
"# if hpcstruct is passed the name of a measurements directory that contains\n"
"# a cubins subdirectory, this makefile will be used to orchestrate parallel\n"
"# analysis of all cubins within the subdirectory.\n"
"#\n"
"# to simplify things at execution time, this makefile will be incorporated\n"
"# into hpcstruct as a string and written to a temporary file if it is needed.\n"
"# this avoids the need for hpcstruct to know how to find a copy of this\n"
"# makefile at runtime in an hpctoolkit installation.\n"
"#*******************************************************************************\n"
"\n"
"#-------------------------------------------------------------------------------\n"
"# $(C): cubin files\n"
"#-------------------------------------------------------------------------------\n"
"C := $(wildcard $(CUBINS_DIR)/*.cubin)\n"
"\n"
"\n"
"#-------------------------------------------------------------------------------\n"
"# $(S): hpcstruct files for cubins\n"
"#-------------------------------------------------------------------------------\n"
"S := $(patsubst $(CUBINS_DIR)/%,$(STRUCTS_DIR)/%.hpcstruct,$(C))\n"
"\n"
"\n"
"#-------------------------------------------------------------------------------\n"
"# $(W): warning files that may be generated during structure analysis of cubins\n"
"#-------------------------------------------------------------------------------\n"
"W := $(patsubst %.hpcstruct,%.warnings,$(S))\n"
"\n"
"\n"
"#-------------------------------------------------------------------------------\n"
"# execute the sequence of commands for each target in a single shell\n"
"#-------------------------------------------------------------------------------\n"
".ONESHELL:\n"
"\n"
"\n"
"#-------------------------------------------------------------------------------\n"
"# rule  for analyzing a cubin\n"
"# 1. analyze a cubin file in $(CUBINS_DIR)\n"
"# 2. produce a hpcstruct file in $(STRUCTS_DIR)\n"
"# 3. leave a warnings file in $(STRUCTS_DIR) if trouble arises\n"
"# 4. announce when analysis of a cubin begins and ends\n"
"#-------------------------------------------------------------------------------\n"
"$(STRUCTS_DIR)/%.hpcstruct: $(CUBINS_DIR)/%\n"
"	@cubin_name=`basename -s x $<`\n"
"	warn_name=$(STRUCTS_DIR)/$$cubin_name.warnings\n"
"	echo msg: beginning analysis of $$cubin_name\n"
"	hpcstruct -o $@ $< > $$warn_name 2>&1\n"
"	if [ -s $$warn_name ]; then\n"
"		echo WARNING: incomplete analysis of $$cubin_name\\; see $$warn_name for details\n"
"	else\n"
"		rm -f $$warn_name\n"
"	fi\n"
"	echo msg: completed analysis of $$cubin_name\n"
"\n"
"\n"
"#-------------------------------------------------------------------------------\n"
"# default target:\n"
"#    invoke make recursively with supplementary arguments\n"
"#-------------------------------------------------------------------------------\n"
"default:\n"
"	@make -k -j --silent analyze\n"
"\n"
"\n"
"#-------------------------------------------------------------------------------\n"
"# analyze all cubins to create structure files\n"
"#-------------------------------------------------------------------------------\n"
"analyze: $(S)\n"
"\n"
"\n"
"#-------------------------------------------------------------------------------\n"
"# remove all generated files\n"
"#-------------------------------------------------------------------------------\n"
"clean:\n"
"	@echo removing all hpcstruct files in $(STRUCTS_DIR)\n"
"	@rm -f $(S)\n"
"	@echo removing all warnings in $(STRUCTS_DIR)\n"
"	@rm -f $(W)\n"
