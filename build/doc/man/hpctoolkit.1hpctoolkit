'\" t
.\" Manual page created with latex2man on Thu Aug  8 13:41:15 CDT 2019
.\" NOTE: This file is generated, DO NOT EDIT.
.de Vb
.ft CW
.nf
..
.de Ve
.ft R

.fi
..
.TH "HPCTOOLKIT" "1" "2018/06/28" "The HPCToolkit Performance Tools " "The HPCToolkit Performance Tools "
.SH NAME

.PP
\fBHPCToolkit\fP
is a collection of performance analysis tools for node\-based performance analysis. 
It has been designed around the following principles: 
.PP
.TP
.B *
\fBBe language independent.\fP
.TP
.B *
\fBAvoid code instrumentation.\fP
.TP
.B *
\fBAvoid blind spots.\fP
.TP
.B *
\fBProvide context for understanding layered and object\-oriented software.\fP
.TP
.B *
\fBSupport multiple performance measures to prevent myopic interpretation.\fP
.TP
.B *
\fBDisplay user\-defined derived performance metrics for effective analysis.\fP
.TP
.B *
\fBTake a top down approach to performance analysis.\fP
.TP
.B *
\fBUse hierarchical aggregation to mitigate approximate attribution.\fP
.TP
.B *
\fBEnsure that measurement and analysis can scale to very large programs and executions.\fP
.PP
More detailed explanation of these design principles is available 
in papers on the HPCToolkit website at hpctoolkit.org\&.
.PP
.SH DESCRIPTION

.PP
A typical performance analysis session consists of: 
.TP
1.
\fBMeasuring execution costs.\fP
\fIhpcrun\fP(1)
uses statistical sampling to collect with low overhead and high accuracy
a set of \fIcall path profiles\fP,
i.e. measurements of hardware resource consumption (costs) together with the call paths at which consumption occurred. 
For statically linked applications \fIhpclink\fP(1)
serves the same purpose.
.PP
.TP
2.
\fBAnalyzing source code structure.\fP
\fIhpcstruct\fP(1)
discovers static program structure such as procedures and loop nests
from binary code in the application\&'s executable. 
It takes into account optimizing compiler transformations such as restructuring of procedures and loops 
for inlining, software pipelining, multicore parallelization, and offloading to GPUs. 
.PP
.TP
3.
\fBAttributing measured costs to source code structure.\fP
\fIhpcprof\fP(1)
combines hpcrun\&'s
dynamic profiles 
with hpcstruct\&'s
static program structure 
to attribute measured costs incurred by the optimized object code 
to meaningful source code constructs such as procedures, loop nests, and individual lines of code. 
The result of attribution is an \fIexperiment database\fP
stored in a file system directory. 
.PP
.TP
4.
\fBVisualizing attributed costs in source code or timeline views.\fP
\fIhpcviewer\fP(1)
and \fIhpctraceviewer\fP(1)
are tools for presenting the resulting experiment databases. 
hpcviewer
displays measurements in outline form, 
each entry attributing costs to a source code construct by line number 
and linked to a display of corresponding application source code. 
hpctraceviewer
displays measurements as a two dimensional timeline 
with execution progress aalong the horizontal axis 
and the application\&'s parallel threads along the vertical axis. 
The visualization step may be done interactively with either tool on a personal computer. 
even if the application must run in batch on a large computing cluster. 
To this end, experiment databases are self contained and relocatable, 
even containing a copy of the application source code, 
and the hpcviewer
and hpctraceviewer
tools 
are platform\-independent (via Eclipse RCP) 
and lightweight enough for good interactive performance on a laptop. 
.PP
.SH EXAMPLES

.PP
Assume we have an application called zoo
whose source code is located in \fIpath\-to\-zoo\fP\&.
First compile and link your application normally with full optimization 
and as much debugging information as possible. 
Typically this involves compiler options such as \-O3 \-g\&. 
(See \fIhpcstruct\fP(1)
for options for specific compilers.)
Then perform the following steps. 
.PP
.TP
1.
\fBMeasure\fP\&.
Profile with \fIhpcrun\fP(1)
\&.
Assume you wish to measure two different sets of resources, 
which will require two measurement runs. 
hpcrun
always collects the data needed for hpcviewer,
but if you want to use hpctraceviewer
you must add 
the \-t
/ \-\-trace
option to collect additional data. 
.Vb
  hpcrun \-t <event\-set\-1> zoo
  hpcrun \-t <event\-set\-2> zoo
.Ve
.PP
\fIhpcrun\fP(1)
by default puts its results into a measurement directory
named hpctoolkit\-appname\-measurements,
so the two sets of measurements are combined automatically. 
.PP
.TP
2.
\fBAnalyze\fP\&.
Use \fIhpcstruct\fP(1)
to discover program structure
and write it to the file zoo.hpcstruct\&.
Although hpcstruct
has a number of advanced options, it is typically run with none. 
The application\&'s source code directory is passed as the last argument. 
.Vb
  hpcstruct zoo
.Ve
.PP
By default the generated structure file is named zoo.hpcstruct\&.
.PP
.TP
3.
\fBAttribute\fP\&.
Create an experiment database using \fIhpcprof\fP(1)
\&.
(The version of \fIhpcprof\fP(1)
must match
the version of \fIhpcrun\fP(1)
\&.)
Use the \-I
option to specify the location of zoo\&'s
source code 
and the \-S
option to specify the structure file produced in the previous step. 
The neasurement directory is specified as the last argument. 
By default the generated experiment database is named hpctoolkit\-zoo\-database\&.
.Vb
  hpcprof \-I path\-to\-zoo/+ \-S zoo.hpcstruct hpctoolkit\-zoo\-measurements
.Ve
.PP
.TP
4.
\fBVisualize\fP\&.
Visualize the experiment database in either source or timeline view, 
on any machine where you\&'ve copied the database: 
.Vb
  hpcviewer hpctoolkit\-zoo\-database
  hpctraceviewerviewer hpctoolkit\-zoo\-database
  
.Ve
In hpcviewer
you may also view "derived metrics", 
ie combinations of measured metrics which are computed on the fly. 
See \fIThe hpcviewer User Interface\fP
Guide for more information. 
.PP
.SH SEE ALSO

.PP
\fIhpcrun\fP(1)
,
\fIhpclink\fP(1)
.br
\fIhpcstruct\fP(1)
.br
\fIhpcprof\fP(1)
,
\fIhpcprof\-mpi\fP(1)
.br
\fB \fP\fB \fP\fIhpcsummary\fP(1)
.br
\fIhpcviewer\fP(1)
,
\fIhpctraceviewer\fP(1)
.PP
.SH VERSION

.PP
Version: develop
.PP
.SH LICENSE AND COPYRIGHT

.PP
.TP
Copyright 
(C)2002\-2019, Rice University. 
.TP
License 
See README.License\&.
.PP
.SH AUTHORS

.PP
Email: \fBhpctoolkit\-forum =at= rice.edu\fP
.br
WWW: \fBhttp://hpctoolkit.org\fP\&.
.PP
.\" NOTE: This file is generated, DO NOT EDIT.
